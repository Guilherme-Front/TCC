<?php
session_start();
require_once __DIR__ . '/../controllers/conn.php';

// Verifica se o usu√°rio est√° logado
if (!isset($_SESSION['id_cliente'])) {
    $_SESSION['toast'] = [
        'message' => 'Voc√™ precisa estar logado para acessar esta p√°gina!',
        'type' => 'error'
    ];
    header('Location: ../views/Login.php');
    exit();
}

// Verifica o token CSRF
if (!isset($_POST['csrf_token']) || $_POST['csrf_token'] !== $_SESSION['csrf_token']) {
    $_SESSION['toast'] = [
        'message' => 'Token de seguran√ßa inv√°lido!',
        'type' => 'error'
    ];
    header('Location: ../views/telaPerfil.php#endereco-section');
    exit();
}

// Fun√ß√£o para limpar e validar dados
function sanitizeInput($data)
{
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Fun√ß√£o para validar e formatar CEP
function validarCEP($cep)
{
    // Remove todos os caracteres n√£o num√©ricos
    $cep = preg_replace('/[^0-9]/', '', $cep);

    // Verifica se tem 8 d√≠gitos
    if (strlen($cep) !== 8) {
        return false;
    }

    return $cep;
}

// Processa os dados do formul√°rio
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $id_cliente = $_SESSION['id_cliente'];
    $cep = validarCEP($_POST['cep']); // Usa a nova fun√ß√£o de valida√ß√£o
    $rua = sanitizeInput($_POST['rua']);
    $bairro = sanitizeInput($_POST['bairro']);
    $cidade = sanitizeInput($_POST['cidade']);
    $numero = isset($_POST['numero']) ? (int) sanitizeInput($_POST['numero']) : null;
    $complemento = isset($_POST['complemento']) ? sanitizeInput($_POST['complemento']) : null;

    // Valida√ß√µes b√°sicas
    $erros = [];

    if ($cep === false) {
        $erros[] = 'CEP deve conter exatamente 8 d√≠gitos.';
    }

    if (empty($rua)) {
        $erros[] = 'Rua √© obrigat√≥ria.';
    } elseif (strlen($rua) < 3) {
        $erros[] = 'Rua deve ter pelo menos 3 caracteres.';
    }

    if (empty($bairro)) {
        $erros[] = 'Bairro √© obrigat√≥rio.';
    }

    if (empty($cidade)) {
        $erros[] = 'Cidade √© obrigat√≥ria.';
    }

    if ($numero !== null && ($numero < 1 || $numero > 9999)) {
        $erros[] = 'N√∫mero deve estar entre 1 e 9999.';
    }

    // Se n√£o houver erros, busca o endere√ßo pelo CEP
    if (empty($erros)) {
        $dadosCEP = buscarEnderecoPorCEP($cep);

        if (isset($dadosCEP['erro'])) {
            $erros[] = 'CEP n√£o encontrado. Verifique o n√∫mero digitado.';
        } else {
            // Preenche automaticamente apenas se os campos estiverem vazios
            if (empty($rua))
                $rua = $dadosCEP['logradouro'] ?? '';
            if (empty($bairro))
                $bairro = $dadosCEP['bairro'] ?? '';
            if (empty($cidade))
                $cidade = $dadosCEP['localidade'] ?? '';

            // Verifica novamente os campos obrigat√≥rios
            if (empty($rua))
                $erros[] = 'N√£o foi poss√≠vel obter o logradouro deste CEP. Por favor, preencha manualmente.';
            if (empty($bairro))
                $erros[] = 'N√£o foi poss√≠vel obter o bairro deste CEP. Por favor, preencha manualmente.';
            if (empty($cidade))
                $erros[] = 'N√£o foi poss√≠vel obter a cidade deste CEP. Por favor, preencha manualmente.';
        }
    }

    // Se houver erros, retorna para a p√°gina com mensagens
    if (!empty($erros)) {
        $_SESSION['toast'] = [
            'message' => implode(' ‚Ä¢ ', $erros), // Usa bullet points para separar os erros
            'type' => 'error'
        ];
        $_SESSION['dados_endereco'] = $_POST; // Mant√©m os dados digitados
        header('Location: ../views/telaPerfil.php#endereco-section');
        exit();
    }

    try {
        // Verifica se j√° existe um endere√ßo para este cliente
        $stmt = $conn->prepare("SELECT id_endereco FROM endereco WHERE id_cliente = ?");
        $stmt->bind_param("i", $id_cliente);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            // Atualiza o endere√ßo existente
            $row = $result->fetch_assoc();
            $id_endereco = $row['id_endereco'];

            $stmt = $conn->prepare("UPDATE endereco SET 
                                  cep = ?, 
                                  bairro = ?, 
                                  rua = ?, 
                                  cidade = ?, 
                                  complemento = ?, 
                                  numero = ? 
                                  WHERE id_endereco = ?");
            $stmt->bind_param("sssssii", $cep, $bairro, $rua, $cidade, $complemento, $numero, $id_endereco);

            $acao = 'atualizado';
        } else {
            // Insere um novo endere√ßo
            $stmt = $conn->prepare("INSERT INTO endereco 
                                  (id_cliente, cep, bairro, rua, cidade, complemento, numero) 
                                  VALUES (?, ?, ?, ?, ?, ?, ?)");
            $stmt->bind_param("isssssi", $id_cliente, $cep, $bairro, $rua, $cidade, $complemento, $numero);

            $acao = 'cadastrado';
        }

        if ($stmt->execute()) {
            $_SESSION['toast'] = [
                'message' => 'Endere√ßo ' . $acao . ' com sucesso! üéâ',
                'type' => 'success'
            ];
        } else {
            throw new Exception('Erro ao salvar endere√ßo no banco de dados.');
        }
    } catch (Exception $e) {
        $_SESSION['toast'] = [
            'message' => 'Erro: ' . $e->getMessage(),
            'type' => 'error'
        ];
    } finally {
        if (isset($stmt)) {
            $stmt->close();
        }
        $conn->close();
    }

    header('Location: ../views/telaPerfil.php#endereco-section');
    exit();
} else {
    $_SESSION['toast'] = [
        'message' => 'M√©todo de requisi√ß√£o inv√°lido!',
        'type' => 'error'
    ];
    header('Location: ../views/telaPerfil.php');
    exit();
}

function buscarEnderecoPorCEP($cep)
{
    $url = "https://viacep.com.br/ws/{$cep}/json/";

    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);

    $response = curl_exec($ch);
    curl_close($ch);

    return json_decode($response, true);
}